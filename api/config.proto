syntax="proto3";

//this is the proto package name,all proto in this project must use this name as the proto package name
package config;
//this is the golang's package name,all proto in this project must use this name as the golang's package name
option go_package="config/api;api";
//https://github.com/chenjie199234/Corelib/blob/main/pbex/pbex.proto
import "pbex/pbex.proto";

//this is the proto file for config service
service config{
	//rpc example(examplereq)returns(exampleresp){
	//	option (pbex.method)="get";//can be set to get,delete,post,put,patch
	//	option (pbex.web_midwares)="b";
	//	option (pbex.web_midwares)="c";
	//	option (pbex.web_midwares)="a";//this function on web protocol has 3 midwares,it's order is b,c,a
	//	option (pbex.crpc_midwares)="b";
	//	option (pbex.crpc_midwares)="c";
	//	option (pbex.crpc_midwares)="a";//this function on crpc protocol has 3 midwares,it's order is b,c,a
	//	option (pbex.cgrpc_midwares)="b";
	//	option (pbex.cgrpc_midwares)="c";
	//	option (pbex.cgrpc_midwares)="a";//this function on grpc protocol has 3 midwares,it's order is b,c,a
	//}

	//get all groups
	rpc groups(groups_req)returns(groups_resp){
		option (pbex.method)="post";
	}
	//get all apps in specific group
	rpc apps(apps_req)returns(apps_resp){
		option (pbex.method)="post";
	}
	//get one specific app's config
	rpc get(get_req)returns(get_resp){
		option (pbex.method)="post";
	}
	//set one specific app's config
	rpc set(set_req)returns(set_resp){
		option (pbex.method)="post";
	}
	//rollback one specific app's config
	rpc rollback(rollback_req)returns(rollback_resp){
		option (pbex.method)="post";
	}
}
//req can be set with pbex extentions
//message examplereq{
	//int64 example_for_extentions=1[(pbex.int_gt)=1,(pbex.int_lt)=100];
//}
//resp's pbex extentions will be ignore
//message exampleresp{
	//int64 example_resp=1;
//}

message groups_req {
	string search_filter=1;
}
message groups_resp {
	repeated string groups=1;
}
message apps_req {
	string groupname=1[(pbex.string_bytes_len_gt)=0];
	string search_filter=2;
}
message apps_resp {
	repeated string apps=1;
}
message get_req {
	string groupname=1[(pbex.string_bytes_len_gt)=0];
	string appname=2[(pbex.string_bytes_len_gt)=0];
	uint32 index=3;//0 means current active config,config's index start from 1
}
message get_resp {
	uint32 cur_index=1;//current active config index,0 means not exist
	uint32 max_index=2;//current max config index,0 means not exist
	uint32 cur_version=3;//current active config version,config's version start from 1
	uint32 this_index=4;//the config data below belong's to which index
	string app_config=5;
	string source_config=6;
}
message set_req {
	string groupname=1[(pbex.string_bytes_len_gt)=0];
	string appname=2[(pbex.string_bytes_len_gt)=0];
	string app_config=3;
	string source_config=4;
}
message set_resp {
}
message rollback_req{
	string groupname=1[(pbex.string_bytes_len_gt)=0];
	string appname=2[(pbex.string_bytes_len_gt)=0];
	uint32 index=3[(pbex.uint_gt)=0];
}
message rollback_resp{
}
